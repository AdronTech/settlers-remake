<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     18.05.2012 19:18:30                                                        

     Builds the native headers.
                   
     michaelz                                                                
     ====================================================================== -->
<project name="build.headers" default="build">
    <property name="javah.out" location="." />
    <property name="javah.src" location="../src" />
    <property name="javah.go.src" location="../../go.graphics/src" />

    <!-- = = = = = = = = = = = = = = = = =
          macrodef: javah          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="javah">
        <attribute name="classdefinition" default="" />
        <attribute name="to" default="." />
        <attribute name="headerfilename" default="" />
        <sequential>
            <antcall target="javah">
                <param name="classpath" value="@{classdefinition}" />
                <param name="to" location="@{to}" />
                <param name="headerfilename" value="@{headerfilename}" />
            </antcall>
        </sequential>
    </macrodef>

    <!-- - - - - - - - - - - - - - - - - - 
          target: javah                      
         - - - - - - - - - - - - - - - - - -->
    <target name="javah" depends="javah.vars,javah.checkchanges" unless="nochanges">
        <echo message="generating jni header for ${classpath}" />

        <mkdir dir=".javah-tmp" />
        <javac srcdir="${javah.src}:${javah.go.src}" destdir=".javah-tmp" listfiles="yes">
            <include name="${classpath_with_slash}.java" />
        </javac>
        <echo>javah -jni -o ${headerfile} -classpath .javah-tmp -force ${classpath}
			</echo>
        <exec executable="javah" failifexecutionfails="true" failonerror="true">
            <arg value="-jni" />
            <arg value="-o" />
            <arg path="${headerfile}" />
            <arg value="-classpath" />
            <arg path=".javah-tmp" />
            <arg value="-force" />
            <arg value="${classpath}" />
        </exec>
        <!--<delete dir=".javah-tmp" />-->
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: javah.vars                      
         - - - - - - - - - - - - - - - - - -->
    <target name="javah.vars">
        <propertyregex property="classpath_with_slash" input="${classpath}" regexp="\." replace="/" global="true" />
        <propertyregex property="classpath_with__" input="${classpath}" regexp="\." replace="_" global="true" />

        <if>
            <equals arg1="${headerfilename}" arg2="" trim="true" />
            <then>
                <propertyregex override="true" property="headerfilename" input="${classpath}" regexp="^(\w*\.)*(\w+)$" replace="\2.h" />
                <echo message="Header file name defaulting to ${headerfilename} for class ${classpath}" />
            </then>
        </if>
        <property name="headerfile" location="${to}/${headerfilename}" />
    </target>


    <!-- - - - - - - - - - - - - - - - - - 
          target: javah.checkchanges                      
         - - - - - - - - - - - - - - - - - -->
    <target name="javah.checkchanges">
        <uptodate property="nochanges" srcfile="${javah.src}/${classpath_with_slash}.java" targetfile="${headerfile}" />
    </target>


	<!-- ================================= 
          target: ant-contrib.load              
         ================================= -->
	<target name="ant-contrib.load" depends="" description="Initializes and loads ant contrib">

		<taskdef resource="net/sf/antcontrib/antlib.xml">
		</taskdef>

		<path id="bin">
			<pathelement path="${build.base}/bin"/>
		</path>

	</target>
    
    <target name="build" depends="ant-contrib.load">
        <javah classdefinition="go.graphics.nativegl.NativeAreaWindow" to="${javah.out}" />
        <javah classdefinition="go.graphics.nativegl.NativeGLWrapper" to="${javah.out}" />

    </target>
</project>

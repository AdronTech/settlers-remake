/*******************************************************************************
 * Copyright (c) 2015
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *******************************************************************************/
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class go_graphics_nativegl_NativeGLWrapper */

#ifndef _Included_go_graphics_nativegl_NativeGLWrapper
#define _Included_go_graphics_nativegl_NativeGLWrapper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    fillQuad
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_fillQuad
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    drawLine
 * Signature: ([FZ)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_drawLine
  (JNIEnv *, jobject, jfloatArray, jboolean);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    glPushMatrix
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_glPushMatrix
  (JNIEnv *, jobject);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    glTranslatef
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_glTranslatef
  (JNIEnv *, jobject, jfloat, jfloat, jfloat);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    glScalef
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_glScalef
  (JNIEnv *, jobject, jfloat, jfloat, jfloat);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    glPopMatrix
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_glPopMatrix
  (JNIEnv *, jobject);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    color
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_color
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    generateTexture
 * Signature: (IILjava/nio/ShortBuffer;)I
 */
JNIEXPORT jint JNICALL Java_go_graphics_nativegl_NativeGLWrapper_generateTexture
  (JNIEnv *, jobject, jint, jint, jobject);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    deleteTexture
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_deleteTexture
  (JNIEnv *, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    drawQuadWithTexture
 * Signature: (I[F)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_drawQuadWithTexture
  (JNIEnv *, jobject, jint, jfloatArray);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    drawTrianglesWithTexture
 * Signature: (I[F)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_drawTrianglesWithTexture__I_3F
  (JNIEnv *, jobject, jint, jfloatArray);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    drawTrianglesWithTexture
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_drawTrianglesWithTexture__III
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    drawTrianglesWithTextureColored
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_drawTrianglesWithTextureColored__III
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    makeWidthValid
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_go_graphics_nativegl_NativeGLWrapper_makeWidthValid
  (JNIEnv *, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    makeHeightValid
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_go_graphics_nativegl_NativeGLWrapper_makeHeightValid
  (JNIEnv *, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    glMultMatrixf
 * Signature: ([FI)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_glMultMatrixf
  (JNIEnv *, jobject, jfloatArray, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    updateTexture
 * Signature: (IIIIILjava/nio/ShortBuffer;)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_updateTexture
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    isGeometryValid
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_go_graphics_nativegl_NativeGLWrapper_isGeometryValid
  (JNIEnv *, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    removeGeometry
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_removeGeometry
  (JNIEnv *, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    startWriteGeometry
 * Signature: (I)Lgo/graphics/GLDrawContext/GLBuffer;
 */
JNIEXPORT jobject JNICALL Java_go_graphics_nativegl_NativeGLWrapper_startWriteGeometry
  (JNIEnv *, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    endWriteGeometry
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_endWriteGeometry
  (JNIEnv *, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    generateGeometry
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_go_graphics_nativegl_NativeGLWrapper_generateGeometry
  (JNIEnv *, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    drawTrianglesWithTextureColored
 * Signature: (ILjava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_drawTrianglesWithTextureColored__ILjava_nio_ByteBuffer_2I
  (JNIEnv *, jobject, jint, jobject, jint);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    putFloat
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_putFloat
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    putByte
 * Signature: (B)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_putByte
  (JNIEnv *, jobject, jbyte);

/*
 * Class:     go_graphics_nativegl_NativeGLWrapper
 * Method:    position
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_go_graphics_nativegl_NativeGLWrapper_position
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif

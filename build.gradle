// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'distribution'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.eclipse.jgit:org.eclipse.jgit:3.1.0.201310021548-r'
        classpath 'com.android.tools.build:gradle:2.0.0-rc3'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    plugins.withType(JavaPlugin).whenPluginAdded {
        compileJava {
            sourceCompatibility = 1.7
            targetCompatibility = 1.7
        }

        sourceSets {
            main {
                java.srcDirs = ['src']
                resources.srcDirs = ['src']
                resources.exclude "**/*.java"
            }
        }
    }
}

distributions {
    main {
        contents {
            into('bin') {
                from { project(':jsettlers.network').startScripts.outputs.files }
            }
        }
    }
}

task run(dependsOn: ':jsettlers.main.swing:run') {}
task runMapCreator(dependsOn: ':jsettlers.mapcreator:run') {}

task runAndroid(dependsOn: ':jsettlers.main.android:build') << {
    Properties local = new Properties()
    local.load(new FileInputStream("local.properties"))
    def adb = local.getProperty('sdk.dir') + '/platform-tools/adb'
    println 'Copy files to your device...'
    exec {
        commandLine adb, 'uninstall', 'jsettlers.main.android'
    }
    exec {
        commandLine adb, 'install', '-r', './jsettlers.main.android/build/outputs/apk/jsettlers.main.android-debug.apk'
    }
    exec {
        commandLine adb, 'shell', 'am', 'start', '-n', 'jsettlers.main.android/jsettlers.main.android.JsettlersActivity'
    }
    println 'The application should have started now.'
}
